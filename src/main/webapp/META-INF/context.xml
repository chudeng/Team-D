<?xml version="1.0" encoding="UTF-8"?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
--><!-- The contents of this file will be loaded for each web application --><Context>

    <!-- Default set of monitored resources. If one of these changes, the    -->
    <!-- web application will be reloaded.                                   -->
    <WatchedResource>WEB-INF/web.xml</WatchedResource>
    <WatchedResource>${catalina.base}/conf/web.xml</WatchedResource>
    
     <!-- *****JNDI*****
    JNDI: Java Naming and Directory interface의 약자로 DB Pool을 미리 Naming 시켜두는 방법(DB 연결방법 중 하나.
    Why: 보통 우리는 JDBC를(DBCP)설정해서 개발을 한다 하지만 웹 어플리케이션을 운영서버로 만들경우 얘기는 달라진다.    
    	1. 개발을 한 사람과 실제 서비스를 운영하는 Admin은 다른 경우가 많기 때문에 소스 레벨에서 설정되어 있는 것보다 WAS에서 설정이 되어 있는 것을 선호.
    	2. 또한 WAS에 여러 개의 웹 어플리케이션을 올려서 사용하기 때문에 WAS에서 한 번에 설정해 주는 것이 자원낭비를 줄일 수 있다.
    	3. 장애가 나거나 성능이 정상적이지 못하면 다른 한 서버가 대신 일을 해줄 수 있다.
   	정리: 운영, 관리, 최적화 문제 대처에 다양한 이점이 있기 때문에 JNDI를 사용. -->

 	<Resource 
 		name="jdbc/Top" 
 		auth="Container" 
 		type="oracle.jdbc.pool.OracleDataSource"
 		driverClassName="oracle.jdbc.driver.OracleDriver" 
 		factory="oracle.jdbc.pool.OracleDataSourceFactory"
 		url="jdbc:oracle:thin:@localhost:1521:xe"
 		user="system" 
 		password="oracle" 
 		maxActive="20" 
 		maxIdle="10" 
 		maxWait = "-1"/>
 	 <!--  
 	 <Resource 
 		name: JNDI 이름
 		auth: 인증 주체
 		type: 데이터베이스 종류별 Data source
 		driverClassName: 연결할 db 종류에 따른 드라이버 클래스 이름
 		factory: 연결할 db 종류에 따른 connectionPool 생성 클래스 이름
 		url: 접속할 db 주소
 		user: db ID
 		password: db password
 		maxActive: 동시에 최대로 db에 연결할 수 있는 ConnectionPool 수
 		maxIdle: 동시에 idle 상태로 대기 할 수 있는 최대 수
 		maxWait: 새로운 연결이 생길 때까지 기다릴 수 있는 최대 시간 />
 	-->

    <!-- Uncomment this to disable session persistence across Tomcat restarts -->
    <!--
    <Manager pathname="" />
    -->

    <!-- Uncomment this to enable Comet connection tacking (provides events
         on session expiration as well as webapp lifecycle) -->
    <!--
    <Valve className="org.apache.catalina.valves.CometConnectionManagerValve" />
    -->
</Context>